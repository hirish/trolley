// Generated by CoffeeScript 1.6.3
var EatListRecipe, Ingredient, Ingredients, Recipe, Recipes, hideKeyboard;

Ingredient = Backbone.Model.extend({
  defaults: {
    id: 0,
    name: null,
    amount: 0,
    isVolume: false
  }
});

Ingredients = Backbone.Collection.extend({
  model: Ingredient
});

Recipe = Backbone.Model.extend({
  defaults: {
    id: 0,
    name: null,
    ingredients: new Ingredients,
    imageURL: null,
    servingSize: 2,
    isStarred: false,
    rating: 0
  }
});

Recipes = Backbone.Collection.extend({
  model: Recipe
});

EatListRecipe = Backbone.Model.extend({
  defaults: {
    quantityModifier: 1,
    baseRecipe: new Recipe,
    ingredients: new Ingredients,
    user: null
  }
});

hideKeyboard = function() {
  document.activeElement.blur();
  return $("input").blur();
};

$('#searchForm').on('change', 'input[name=servings]', function() {
  var selected;
  selected = $.trim($(this).parent('label').text());
  $('button[data-target=#servingSelector]').text(selected);
  return $('#servingSelector').collapse('hide');
});

$(function() {
  var anotherBolognese, bolognese, bologneseIngredients, createRecipeFromJSON, eatlist, errorBox, errorHandler, errorTemplate, finalBolognese, historyHandler, loadHistory, myBolognese, pasta, renderHistoryRecipe, renderSearchResult, search, searchBox, searchResultHandler, searchResultTemplate, searchResultsBox, throttledSearch, userId;
  window.userId = userId = 1;
  pasta = new Ingredient({
    id: 1,
    name: "Spaghetti",
    amount: 150,
    isVolume: false
  });
  bologneseIngredients = new Ingredients([pasta]);
  bolognese = new Recipe({
    id: 1,
    name: "Spaghetti Bolognese",
    imageURL: "http://upload.wikimedia.org/wikipedia/commons/e/e5/Heston_Blumenthal's_Perfect_Spaghetti_Bolognese.jpg",
    ingredients: bologneseIngredients,
    servingSize: 2,
    isStarred: false,
    rating: 5
  });
  myBolognese = new EatListRecipe({
    baseRecipe: bolognese,
    ingredients: bolognese.get('ingredients')
  });
  anotherBolognese = new EatListRecipe({
    baseRecipe: bolognese,
    ingredients: bolognese.get('ingredients')
  });
  finalBolognese = new EatListRecipe({
    baseRecipe: bolognese,
    ingredients: bolognese.get('ingredients')
  });
  eatlist = [myBolognese, anotherBolognese, finalBolognese];
  searchBox = $('#search');
  searchResultsBox = $('#searchResults');
  errorBox = $('#error');
  errorTemplate = $('#errorTemplate').html();
  searchResultTemplate = $('#searchResultTemplate').html();
  createRecipeFromJSON = function(jsonRecipe) {
    return bolognese;
  };
  /* SEARCH
  */

  search = function(e) {
    var searchText;
    searchText = searchBox.val();
    return $.ajax("/" + userId + "/search?q=" + searchText, {
      success: searchResultHandler,
      error: errorHandler
    });
  };
  throttledSearch = _.throttle(search, 250);
  renderSearchResult = function(result) {
    return _.template(searchResultTemplate, {
      name: result.get('name'),
      imageURL: result.get('imageURL')
    });
  };
  searchResultHandler = function(jsonResults) {
    var recipeResult, recipeResults, renderedResult, renderedResults, result, results, _i, _len, _results;
    results = $.parseJSON(jsonResults).results;
    results = [results];
    recipeResults = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = results.length; _i < _len; _i++) {
        result = results[_i];
        _results.push(createRecipeFromJSON(result));
      }
      return _results;
    })();
    renderedResults = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = recipeResults.length; _i < _len; _i++) {
        recipeResult = recipeResults[_i];
        _results.push(renderSearchResult(recipeResult));
      }
      return _results;
    })();
    searchResultsBox.html('');
    _results = [];
    for (_i = 0, _len = renderedResults.length; _i < _len; _i++) {
      renderedResult = renderedResults[_i];
      _results.push(searchResultsBox.append(renderedResult));
    }
    return _results;
  };
  /* HISTORY
  */

  loadHistory = function() {
    console.log("Loading History...");
    return $.ajax("/" + userId + "/history", {
      success: historyHandler,
      error: errorHandler
    });
  };
  historyHandler = function(jsonHistory) {
    var history, recipe, renderedHistoryRecipes, renderedRecipe, result, _i, _len, _results;
    history = $.parseJSON(jsonHistory.results);
    history = [history];
    historyRecipes((function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = history.length; _i < _len; _i++) {
        result = history[_i];
        _results.push(createRecipeFromJSON(result));
      }
      return _results;
    })());
    renderedHistoryRecipes = (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = historyRecipes.length; _i < _len; _i++) {
        recipe = historyRecipes[_i];
        _results.push(renderHistoryRecipe(recipe));
      }
      return _results;
    })();
    historyRecipesBox.html('');
    _results = [];
    for (_i = 0, _len = renderedHistoryRecipes.length; _i < _len; _i++) {
      renderedRecipe = renderedHistoryRecipes[_i];
      _results.push(historyRecipesBox.append(renderedRecipe));
    }
    return _results;
  };
  renderHistoryRecipe = function(result) {
    return true;
  };
  /* ERROR HANDLING
  */

  errorHandler = function(reqObj) {
    var renderedTemplate;
    renderedTemplate = _.template(errorTemplate, {
      statusCode: 404
    });
    return errorBox.html(renderedTemplate);
  };
  return searchBox.change(throttledSearch);
});
